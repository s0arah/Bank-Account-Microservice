type Query{
    accountsList : [BankAccount],
    bankAccountById(id : String) : BankAccount,
    customers: [Customer],
}
type Mutation{
    addAccount(bankAccount:BankAccountDTO) : BankAccount,
    updateAccount(id : String, bankAccount:BankAccountDTO) : BankAccount,
#    createBankAccount(balance : Float, currency : String, type : String) : BankAccount,
#    updateBankAccount(id : String, balance : Float, currency : String, type : String) : BankAccount,
    deleteAccount(id : String) : Boolean
}
type BankAccount{
    id : String,
    createdAt : Float,
    balance : Float,
    currency : String,
    type : String,
    customer : Customer
}
type Customer{
    id : ID,
    name : String,
    bankAccounts : [BankAccount]

}
input BankAccountDTO {
    balance : Float,
    currency : String,
    type : String
}